{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/WebWorker.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","yWebworker","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","generateGuid","Math","random","toString","replace","extend","Y","WebWorker","_Y$AbstractConnector","y","options","_classCallCheck","undefined","room","url","webworker","SharedWorker","role","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","db","stopGarbageCollector","guid","port","start","messageEventListener","event","data","type","receiveMessage","message","connections","userJoined","whenSynced","setUserId","addEventListener","postMessage","auth","_inherits","_createClass","key","value","disconnect","removeEventListener","stop","userLeft","_get","prototype","authInfo","uid","broadcast","AbstractConnector"],"mappings":";;;;;;CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,WAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCCA,ykBAGA,QAAS0B,GAAaT,GAAG,MAAOA,IAAGA,EAAgB,GAAdU,KAAKC,UAAaX,EAAE,GAAGY,SAAS,MAAM,MAAK,KAAK,KAAK,KAAK,MAAOC,QAAQ,SAASJ,GAEvH,QAASK,GAAQC,GAAG,GACZC,GADY,SAAAC,GAEhB,QAAAD,GAAaE,EAAGC,GACd,GADuBC,EAAA7B,KAAAyB,GACPK,SAAZF,EACF,KAAM,IAAIhB,OAAM,iCAElB,IAAoB,MAAhBgB,EAAQG,KACV,KAAM,IAAInB,OAAM,+BAElB,IAAmB,MAAfgB,EAAQI,IACV,KAAM,IAAIpB,OAAM,+FAElB,IAAIqB,GAAY,GAAIC,cAAaN,EAAQI,IAAK,iBAC9CJ,GAAQO,KAAO,OAXQ,IAAAC,GAAAC,EAAArC,MAAAyB,EAAAa,WAAAC,OAAAC,eAAAf,IAAAV,KAAAf,KAYjB2B,EAAGC,GACTQ,GAAKT,EAAEc,GAAGC,uBACVN,EAAKR,QAAUA,EACfQ,EAAKO,KAAOzB,GACZ,IAAInB,GAAAqC,CAhBmB,OAiBvBA,GAAKH,UAAYA,EACjBG,EAAKQ,KAAOX,EAAUW,KACtBR,EAAKQ,KAAKC,QACVT,EAAKU,qBAAuB,SAAUC,GAChCA,EAAMC,KAAKjB,OAASH,EAAQG,MAA4B,MAAnBgB,EAAMC,KAAKL,MAAgBI,EAAMC,KAAKL,OAAS5C,EAAK4C,OACnE,YAApBI,EAAMC,KAAKC,MACblD,EAAKmD,eAAe,YAAaH,EAAMC,KAAKG,SAEtB,SAApBJ,EAAMC,KAAKC,MACwB,MAAjClD,EAAKqD,YAAL,YACFrD,EAAKsD,WAAW,YAAa,UAC7BtD,EAAKuD,WAAW,WACdvD,EAAKwD,UAAUxD,EAAK4C,WAM9BP,EAAKQ,KAAKY,iBAAiB,UAAWpB,EAAKU,sBAC3CV,EAAKQ,KAAKa,aACRR,KAAM,OACNlB,KAAMH,EAAQG,KACd2B,KAAM9B,EAAQ8B,KACdf,KAAM5C,EAAK4C,OAxCUP,EAFT,MAAAuB,GAAAlC,EAAAC,GAAAkC,EAAAnC,IAAAoC,IAAA,UAAAC,MAAA,WA8Cd9D,KAAK+D,gBA9CSF,IAAA,aAAAC,MAAA,WAiDd9D,KAAK4C,KAAKoB,oBAAoB,UAAWhE,KAAK8C,sBAC9C9C,KAAK4C,KAAKqB,OACVjE,KAAKkE,SAAS,aACdlE,KAAK4C,KAAKa,aACRR,KAAM,QACNlB,KAAM/B,KAAK4B,QAAQG,KACnBY,KAAM3C,KAAK2C,OAEbwB,EAAA1C,EAAA2C,UAAA9B,WAAAC,OAAAC,eAAAf,EAAA2C,WAAA,aAAApE,MAAAe,KAAAf,SAzDc6D,IAAA,YAAAC,MAAA,WA4Dd9D,KAAK4C,KAAKY,iBAAiB,UAAWxD,KAAK8C,sBAC3C9C,KAAK4C,KAAKC,QACV7C,KAAK4C,KAAKa,aACRR,KAAM,OACNlB,KAAM/B,KAAK4B,QAAQG,KACnB2B,KAAM1D,KAAKqE,SACX1B,KAAM3C,KAAK2C,OAEbwB,EAAA1C,EAAA2C,UAAA9B,WAAAC,OAAAC,eAAAf,EAAA2C,WAAA,YAAApE,MAAAe,KAAAf,SApEc6D,IAAA,OAAAC,MAAA,SAsEVQ,EAAKnB,GACTnD,KAAKuE,UAAUpB,MAvEDU,IAAA,YAAAC,MAAA,SAyELX,GACTnD,KAAK4C,KAAKa,aACRR,KAAM,UACNlB,KAAM/B,KAAK4B,QAAQG,KACnBoB,QAASA,EACTR,KAAM3C,KAAK2C,UA9ECkB,IAAA,iBAAAC,MAAA,WAkFd,OAAO,MAlFOrC,GACMD,EAAEgD,kBAoF1BhD,GAAED,OAAO,YAAaE,mfAGxBhC,GAAOD,QAAU+B,EACA,mBAANC,IACTD,EAAOC","file":"y-webworker.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y, SharedWorker */\n'use strict'\n\n// Thx to @jed for this script https://gist.github.com/jed/982883\nfunction generateGuid(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,generateGuid)} // eslint-disable-line\n\nfunction extend (Y) {\n  class WebWorker extends Y.AbstractConnector {\n    constructor (y, options) {\n      if (options === undefined) {\n        throw new Error('Options must not be undefined!')\n      }\n      if (options.room == null) {\n        throw new Error('You must define a room name!')\n      }\n      if (options.url == null) {\n        throw new Error('You must specify a url to the web worker! (E.g. \"bower_components/y-webworker/webworker.js\")')\n      }\n      var webworker = new SharedWorker(options.url, 'Yjs Web Worker')\n      options.role = 'slave'\n      super(y, options)\n      this.y.db.stopGarbageCollector()\n      this.options = options\n      this.guid = generateGuid() // we send this unique id with every postMessage. Later it becomes the userId\n      var self = this\n      this.webworker = webworker\n      this.port = webworker.port\n      this.port.start()\n      this.messageEventListener = function (event) {\n        if (event.data.room === options.room && (event.data.guid == null || event.data.guid === self.guid)) {\n          if (event.data.type === 'message') {\n            self.receiveMessage('webworker', event.data.message)\n          }\n          if (event.data.type === 'join') {\n            if (self.connections['webworker'] == null) {\n              self.userJoined('webworker', 'master')\n              self.whenSynced(function () {\n                self.setUserId(self.guid)\n              })\n            }\n          }\n        }\n      }\n      this.port.addEventListener('message', this.messageEventListener)\n      this.port.postMessage({\n        type: 'join',\n        room: options.room,\n        auth: options.auth,\n        guid: self.guid\n      })\n    }\n    destroy () {\n      this.disconnect()\n    }\n    disconnect () {\n      this.port.removeEventListener('message', this.messageEventListener)\n      this.port.stop()\n      this.userLeft('webworker')\n      this.port.postMessage({\n        type: 'leave',\n        room: this.options.room,\n        guid: this.guid\n      })\n      super.disconnect()\n    }\n    reconnect () {\n      this.port.addEventListener('message', this.messageEventListener)\n      this.port.start()\n      this.port.postMessage({\n        type: 'join',\n        room: this.options.room,\n        auth: this.authInfo,\n        guid: this.guid\n      })\n      super.reconnect()\n    }\n    send (uid, message) {\n      this.broadcast(message)\n    }\n    broadcast (message) {\n      this.port.postMessage({\n        type: 'message',\n        room: this.options.room,\n        message: message,\n        guid: this.guid\n      })\n    }\n    isDisconnected () {\n      return false\n    }\n  }\n  Y.extend('webworker', WebWorker)\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"],"sourceRoot":"/source/"}